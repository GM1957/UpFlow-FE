{"version":3,"sources":["pages/HomePage/HomePage.module.css","components/MembersModal/MembersModal.module.css","components/ShowTaskModal/ShowTaskModal.module.css","components/KanbanTable/KanbanTable.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","pages/LoginPage/LoginPage.module.css","pages/SignupPage/SignupPage.module.css","components/NavBar/NavBar.module.css","components/CreateProjectModal/CreateProjectModal.module.css","services/aws-exports.js","services/apis.js","services/axios.js","services/get-s3-signature.js","services/s3-upload-image.js","redux/actions/authActions.js","components/Loaders/Loader.js","assets/logo.png","components/NavBar/NavBar.js","hoc/Aux.js","components/UI/Modal/Modal.js","components/UI/Backdrop/Backdrop.js","components/CreateProjectModal/CreateProjectModal.js","components/LeftSideBar/LeftSideBar.js","hoc/Layout/Layout.js","pages/WelcomePage/WelcomePage.js","pages/HomePage/HomePage.js","components/LoginModal/LoginModal.js","pages/LoginPage/LoginPage.js","components/SignupModal/SignupModal.js","pages/SignupPage/SignupPage.js","components/CreateTaskModal/CreateTaskModal.js","components/ShowTaskModal/ShowTaskModal.js","components/MembersModal/MembersModal.js","components/KanbanHeader/KanbanHeader.js","components/KanbanTable/KanbanTable.js","pages/DashBoardPage/DashBoardPage.js","partials/RouteHandler.js","partials/AuthGuard.js","redux/reducers/authReducers.js","redux/reducers/index.js","redux/index.js","App.js","index.js","components/Loaders/Loader.module.css","components/LeftSideBar/LeftSideBar.module.css","components/LoginModal/LoginModal.module.css","components/SignupModal/SignupModal.module.css","pages/WelcomePage/WelcomePage.module.css","components/KanbanHeader/KanbanHeader.module.css","components/CreateTaskModal/CreateTaskModal.module.css","hoc/Layout/Layout.module.css"],"names":["module","exports","appConfig","aws_amplify_config","identityPoolId","region","identityPoolRegion","userPoolId","userPoolWebClientId","mandatorySignIn","authenticationFlowType","clientMetadata","myCustomKey","oauth","domain","scope","redirectSignIn","redirectSignOut","responseType","apis","BASE_LOCAL_URL","BASE_SERVER_URL","GET_USER","CREATE_PROJECT","UPDATE_PROJECT","GET_PROJECT","DELETE_PROJECT","PROJECT_REMOVE_MEMBER","JOIN_PROJECT","S3_GET_PRESIGNED_URL","http","axios","create","baseURL","interceptors","response","use","error","originalRequest","config","console","log","status","url","window","location","href","Promise","reject","data","code","statusText","refreshToken","localStorage","getItem","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","exp","post","refresh","then","setItem","access","defaults","headers","catch","err","uuid","require","getS3Signeture","name","a","bucket","directory","fileName","v4","result","s3UploadImage","presignedUploadUrl","file","fetch","Request","method","body","Headers","ACL","failed","login","cognitoUserInfo","common","signInUserSession","idToken","jwtToken","token","type","setUserDetails","user","payload","Loader","props","className","classes","container","dash","uno","join","dos","tres","cuatro","connect","state","Auth","logout","dispatch","signOut","toast","NavBar","NavLogo","src","Logo","alt","ButtonSection","isLoggedIn","UserTooltip","UserIconSection","UserTooltipActive","TooltipButtons","Buttons","onClick","LoginButton","to","exact","SignupButton","aux","children","Modal","Backdrop","show","style","zIndex","clicked","useState","projectName","setProjectName","projectDescription","setProjectDescription","selectedImageUrl","setSelectedImageUrl","selectedImage","setSelectedImage","loadingImage","setLoadingImage","isLoading","setIsLoading","onDrop","useCallback","pendingImage","URL","createObjectURL","useDropzone","accept","disabled","getRootProps","getInputProps","isDragActive","createProjectHandler","projectPicture","s3Sign","oldUserDetails","userdetails","projectIds","success","shouldUpdateListHandler","CloseBtn","ModalDesign","InputLabel","InputBoxs","onChange","event","target","value","length","SelectedProjectImageArea","RemoveImageButton","AddProjectPhotoSection","CreateProjectDisabled","CreateProjectButton","showCreateProjectModal","setShowCreateProjectModal","myProjects","setMyProjects","shouldUpdateList","setShouldUpdateList","isJoining","setIsJoining","joinCode","setJoinCode","joinProjectHandler","joinId","res","useEffect","CreateProjectModal","LeftProjectBar","CreateNewProjectButton","PlusIcon","JoinProject","placeholder","JoinButton","map","item","i","activeClassName","ProjectCardActive","projectId","ProjectNameBox","ProjectNameSection","Layout","Aux","isLeftBar","LeftBox","RightBoxFull","RightBox","WelcomePage","Header","Smiley","context","area","circles","wrapper","box","Main","LoginModal","email","password","setEmail","newState","setState","setPassword","isLoadingOnHandler","isLoadingOFFHandler","onSubmit","preventDefault","signIn","closed","message","attachedClasses","Close","this","open","Open","LoginHeader","classNames","Form","required","LoginButtonDiv","Component","LoginPage","setOpen","history","useHistory","goBack","SignupModal","signUp","username","attributes","SignupButtonDiv","SignupPage","CreateTaskModal","taskTitle","setTaskTitle","taskDescription","setTaskDescription","assigneeDetails","setAssigneeDetails","assignedByDetails","setAssignedByDetails","options","setOptions","optionsArr","Project","teamMemberIds","label","AssignSection","AssignDropDown","selected","CreateTaskButton","createNewTaskHandler","columnId","ShowTaskModal","TaskModal","Task","adminIds","setAdminIds","removeUserHandler","userId","oldUTeamIdsArr","newTeamIdsArr","forEach","push","updatedProject","SetProject","removedUserId","newTeamMemberIds","UserCard","includes","sub","RemoveUserButton","KanbanHeader","showMembersModal","setShowMembersModal","MembersModalArea","TheHeader","ProjecImage","ProjectName","ProjectIdAndUserSection","MembersButton","KanbanTable","showCreateTaskModal","setShowCreateTaskModal","showTaskModal","setShowTaskModal","project","setProject","columns","setColumns","newColumnName","setNewColumnName","isColumnLoading","setColumnsLoading","createTaskModalHandler","showTaskModalHandler","fetchColumns","kanbanDetails","saveAllColumnState","kanbanColumns","put","newColumnsUpdated","id","KanbanBody","DroppableBody","Object","keys","onDragEnd","destination","source","droppableId","sourceColumn","destColumn","sourceItems","tasks","destItems","splice","index","removed","column","copiedItems","entries","DroppableColumn","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","DraggingOverColumn","DraggingNotOverColumn","DroppableColumnName","columnName","AddTaskButton","TasksSection","draggableId","draggableProps","dragHandleProps","isDragging","TaskDragging","TaskNotDragging","TaskTitle","AssignedTo","AssignedToEmail","MoreDetailsSection","CreateColumnSection","CreateColumnButton","newColumnId","createNewColumnHandler","DashBoardPage","match","params","RouteHandler","basename","path","component","HomePage","isAuthenticating","setAuthenticating","authenticate","currentAuthenticatedUser","bypassCache","cognitoUser","get","DBuser","fetchUserData","initialState","action","createRootReducer","combineReducers","middleware","thunk","logger","configureStore","createStore","composeWithDevTools","applyMiddleware","Amplify","configure","awsConfig","store","App","position","POSITION","TOP_RIGHT","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14789fdf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"HomePage_wrapper__AWVb6\",\"box\":\"HomePage_box__NgQ4D\",\"animate\":\"HomePage_animate__CXanA\",\"Main\":\"HomePage_Main__1IAqh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalDesign\":\"MembersModal_ModalDesign__GtVGW\",\"UserCard\":\"MembersModal_UserCard__1PpjC\",\"RemoveUserButton\":\"MembersModal_RemoveUserButton__1XpNU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalDesign\":\"ShowTaskModal_ModalDesign__hz49g\",\"TaskModal\":\"ShowTaskModal_TaskModal__2QKmT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DroppableBody\":\"KanbanTable_DroppableBody__MPzOG\",\"DroppableColumn\":\"KanbanTable_DroppableColumn__3bjFq\",\"CreateTaskModal\":\"KanbanTable_CreateTaskModal__RQLkK\",\"KanbanBody\":\"KanbanTable_KanbanBody__3oOFN\",\"DroppableColumnName\":\"KanbanTable_DroppableColumnName__3_Dwp\",\"AddTaskButton\":\"KanbanTable_AddTaskButton__RPUlI\",\"DraggingOverColumn\":\"KanbanTable_DraggingOverColumn__2ybj8\",\"DraggingNotOverColumn\":\"KanbanTable_DraggingNotOverColumn__3xG94\",\"TasksSection\":\"KanbanTable_TasksSection__Jb0bj\",\"TaskDragging\":\"KanbanTable_TaskDragging__1fDSI\",\"TaskNotDragging\":\"KanbanTable_TaskNotDragging__RDj3w\",\"TaskTitle\":\"KanbanTable_TaskTitle__2BKX4\",\"AssignedTo\":\"KanbanTable_AssignedTo__2_YSE\",\"AssignedToEmail\":\"KanbanTable_AssignedToEmail__3-mYK\",\"MoreDetailsSection\":\"KanbanTable_MoreDetailsSection__16lZ6\",\"CreateColumnSection\":\"KanbanTable_CreateColumnSection__GJYKg\",\"CreateColumnButton\":\"KanbanTable_CreateColumnButton__3YqWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginModal\":\"LoginPage_LoginModal__PLsPU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignupModal\":\"SignupPage_SignupModal__2URtU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__-XYZQ\",\"NavLogo\":\"NavBar_NavLogo__8_ho6\",\"ButtonSection\":\"NavBar_ButtonSection__1HL5J\",\"LoginButton\":\"NavBar_LoginButton__2qY5V\",\"SignupButton\":\"NavBar_SignupButton__5pCWN\",\"UserIconSection\":\"NavBar_UserIconSection__1lrt8\",\"UserTooltip\":\"NavBar_UserTooltip__1LsJx\",\"UserTooltipActive\":\"NavBar_UserTooltipActive__2EwGQ\",\"TooltipButtons\":\"NavBar_TooltipButtons__1PXxP\",\"Buttons\":\"NavBar_Buttons__23wb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalDesign\":\"CreateProjectModal_ModalDesign__1SkeF\",\"InputLabel\":\"CreateProjectModal_InputLabel__nqL_M\",\"InputBoxs\":\"CreateProjectModal_InputBoxs__2Eyf2\",\"AddProjectPhotoSection\":\"CreateProjectModal_AddProjectPhotoSection__21n0H\",\"CreateProjectButton\":\"CreateProjectModal_CreateProjectButton__3h6LL\",\"SelectedProjectImageArea\":\"CreateProjectModal_SelectedProjectImageArea__2ubXp\",\"CreateProjectDisabled\":\"CreateProjectModal_CreateProjectDisabled__jDvU8\"};","const appConfig =\n  process.env.NODE_ENV === \"production\"\n    ? {\n        aws_amplify_config: {\n          // REQUIRED only for Federated Authentication - Amazon Cognito Identity Pool ID\n          identityPoolId: \"us-west-1:a8624025-517a-434c-937a-d0c0630572e8\",\n\n          // REQUIRED - Amazon Cognito Region\n          region: \"us-west-1\",\n\n          // OPTIONAL - Amazon Cognito Federated Identity Pool Region\n          // Required only if it's different from Amazon Cognito Region\n          identityPoolRegion: \"us-west-1\",\n\n          // OPTIONAL - Amazon Cognito User Pool ID\n          userPoolId: \"us-west-1_CsYbKL6Dn\",\n\n          // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n          userPoolWebClientId: \"3tasnou2pl1426dltlrscj1mtt\",\n\n          // OPTIONAL - Enforce user authentication prior to accessing AWS resources or not\n          mandatorySignIn: false,\n\n          authenticationFlowType: \"USER_PASSWORD_AUTH\",\n\n          // OPTIONAL - Manually set key value pairs that can be passed to Cognito Lambda Triggers\n          clientMetadata: { myCustomKey: \"myCustomValue\" },\n\n          // OPTIONAL - Hosted UI configuration\n          oauth: {\n            domain: \"dev-upflow-be.auth.us-west-1.amazoncognito.com\",\n            scope: [\n              \"phone\",\n              \"email\",\n              \"profile\",\n              \"openid\",\n              \"aws.cognito.signin.user.admin\",\n            ],\n            redirectSignIn: \"http://upflow.devrook.com\",\n            redirectSignOut: \"http://upflow.devrook.com\",\n            responseType: \"code\", // or 'token', note that REFRESH token will only be generated when the responseType is code\n          },\n        },\n      }\n    : {\n        aws_amplify_config: {\n          // REQUIRED only for Federated Authentication - Amazon Cognito Identity Pool ID\n          identityPoolId: \"us-west-1:a8624025-517a-434c-937a-d0c0630572e8\",\n\n          // REQUIRED - Amazon Cognito Region\n          region: \"us-west-1\",\n\n          // OPTIONAL - Amazon Cognito Federated Identity Pool Region\n          // Required only if it's different from Amazon Cognito Region\n          identityPoolRegion: \"us-west-1\",\n\n          // OPTIONAL - Amazon Cognito User Pool ID\n          userPoolId: \"us-west-1_CsYbKL6Dn\",\n\n          // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n          userPoolWebClientId: \"3tasnou2pl1426dltlrscj1mtt\",\n\n          // OPTIONAL - Enforce user authentication prior to accessing AWS resources or not\n          mandatorySignIn: false,\n\n          authenticationFlowType: \"USER_PASSWORD_AUTH\",\n\n          // OPTIONAL - Manually set key value pairs that can be passed to Cognito Lambda Triggers\n          clientMetadata: { myCustomKey: \"myCustomValue\" },\n\n          // OPTIONAL - Hosted UI configuration\n          oauth: {\n            domain: \"dev-upflow-be.auth.us-west-1.amazoncognito.com\",\n            scope: [\n              \"phone\",\n              \"email\",\n              \"profile\",\n              \"openid\",\n              \"aws.cognito.signin.user.admin\",\n            ],\n            redirectSignIn: \"http://localhost:3000\",\n            redirectSignOut: \"http://localhost:3000\",\n            responseType: \"code\", // or 'token', note that REFRESH token will only be generated when the responseType is code\n          },\n        },\n      };\n\n// You can get the current config object\nexport default appConfig;\n","const apis = {\n  BASE_LOCAL_URL: \"http://localhost:3000\",\n  BASE_SERVER_URL:\n    process.env.NODE_ENV === \"production\"\n      ? \"https://mqv333ndk6.execute-api.us-west-1.amazonaws.com/dev\"\n      : \"https://mqv333ndk6.execute-api.us-west-1.amazonaws.com/dev\",\n\n  GET_USER: \"/user\", //{email_id} GET REQUEST\n\n  CREATE_PROJECT: \"/project\", // POST REQUEST\n  UPDATE_PROJECT: \"/project\", // PUT REQUEST\n  GET_PROJECT: \"/project/get\", // POST REQUEST\n  DELETE_PROJECT: \"/project\", // Delete REQUEST\n  PROJECT_REMOVE_MEMBER: \"/project/remove-member\", // POST REQUEST\n\n  JOIN_PROJECT: \"/project/join\", // POST REQUEST\n\n  S3_GET_PRESIGNED_URL: \"/s3upload/get-signed-url\", // POST REQUEST GET PRESIGNED URL\n};\n\nexport default apis;\n","import axios from \"axios\";\nimport apis from \"./apis\";\n\nconst http = axios.create({\n  baseURL: apis.BASE_SERVER_URL,\n});\n\nhttp.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    const originalRequest = error.config;\n\n    // Prevent infinite loops\n    console.log(\"this is err from axios\", error);\n    if (\n      error.response.status === 401 &&\n      originalRequest.url === apis.BASE_SERVER_URL + \"/token/refresh/\"\n    ) {\n      window.location.href = \"/user/login\";\n      return Promise.reject(error);\n    }\n\n    if (\n      error.response.data.code === \"token_not_valid\" &&\n      error.response.status === 401 &&\n      error.response.statusText === \"Unauthorized\"\n    ) {\n      const refreshToken = localStorage.getItem(\"refresh_token\");\n\n      if (refreshToken) {\n        const tokenParts = JSON.parse(atob(refreshToken.split(\".\")[1]));\n\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\n        const now = Math.ceil(Date.now() / 1000);\n        console.log(tokenParts.exp);\n\n        if (tokenParts.exp > now) {\n          // TODO: instade call the current user details with amplify and replace the token\n          return http\n            .post(\"/token/refresh/\", { refresh: refreshToken })\n            .then((response) => {\n              localStorage.setItem(\"access_token\", response.data.access);\n              localStorage.setItem(\"refresh_token\", response.data.refresh);\n\n              http.defaults.headers[\"Authorization\"] =\n                \"JWT \" + response.data.access;\n              originalRequest.headers[\"Authorization\"] =\n                \"JWT \" + response.data.access;\n\n              return http(originalRequest);\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        } else {\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\n          window.location.href = \"/user/login/\";\n        }\n      } else {\n        console.log(\"Refresh token not available.\");\n        window.location.href = \"/user/login/\";\n      }\n    }\n\n    // specific error handling done elsewhere\n    return Promise.reject(error);\n  }\n);\n\nexport default http;\n","import { apis, axios } from \"../services\";\nconst uuid = require(\"uuid\");\n\nconst getS3Signeture = async (name) => {\n  const result = await axios.post(apis.S3_GET_PRESIGNED_URL, {\n    bucket: \"dev-upflow-be-main-bucket\",\n    directory: \"posts\",\n    fileName: uuid.v4() + name,\n  });\n  return result.data;\n};\n\nexport default getS3Signeture;\n","const s3UploadImage = async (presignedUploadUrl, file) => {\n  const response = await fetch(\n    new Request(presignedUploadUrl, {\n      method: \"PUT\",\n      body: file,\n      headers: new Headers({\n        \"Content-Type\": \"image/*\",\n        ACL: \"public-read\",\n      }),\n    })\n  );\n  if (response.status === 200) {\n    const data = {\n      url: response.url.split(\"?\")[0],\n      status: 200,\n    };\n    return data;\n  } else {\n    const failed = {\n      url: \"\",\n      status: 500,\n    };\n\n    return failed;\n  }\n};\n\nexport default s3UploadImage;\n","import { Auth } from \"aws-amplify\";\nimport { toast } from \"react-toastify\";\nimport { axios } from \"../../services\";\n\nconst login = (cognitoUserInfo) => {\n  axios.defaults.headers.common[\"Authorization\"] =\n    cognitoUserInfo.signInUserSession.idToken.jwtToken;\n  localStorage.setItem(\n    \"access_token\",\n    cognitoUserInfo.signInUserSession.idToken.jwtToken\n  );\n  localStorage.setItem(\n    \"refresh_token\",\n    cognitoUserInfo.signInUserSession.refreshToken.token\n  );\n  return {\n    type: \"LOGIN\",\n    cognitoUserInfo,\n  };\n};\n\nconst logout = () => async (dispatch) => {\n  try {\n    await Auth.signOut();\n    axios.defaults.headers.common[\"Authorization\"] = \"\";\n    localStorage.setItem(\"access_token\", \"\");\n    localStorage.setItem(\"refresh_token\", \"\");\n    dispatch({\n      type: \"LOGOUT\",\n    });\n    dispatch({\n      type: \"REMOVE_DATA\",\n    });\n  } catch (err) {\n    toast.error(\"Internal server error, failed to signout\");\n    console.log(\"failed to signout\", err);\n  }\n};\n\nconst setUserDetails = (user) => {\n  return {\n    type: \"SET_USER_DETAILS\",\n    payload: user,\n  };\n};\n\nconst setPartialDetails = (user) => {\n  return {\n    type: \"SET_USER_DETAILS_PARTIAL\",\n    payload: user,\n  };\n};\n\nexport { login, logout, setUserDetails, setPartialDetails };\n","import React from \"react\";\n\nimport classes from \"./Loader.module.css\";\n\nconst Loader = (props) => {\n  return (\n    <div className={classes.container}>\n      <div className={[classes.dash, classes.uno].join(\" \")}></div>\n      <div className={[classes.dash, classes.dos].join(\" \")}></div>\n      <div className={[classes.dash, classes.tres].join(\" \")}></div>\n      <div className={[classes.dash, classes.cuatro].join(\" \")}></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","export default __webpack_public_path__ + \"static/media/logo.7651a0c2.png\";","import React from \"react\";\nimport { logout } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\nimport Logo from \"../../assets/logo.png\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./NavBar.module.css\";\n\nconst NavBar = (props) => {\n  return (\n    <div className={classes.NavBar}>\n      <div className={classes.NavLogo}>\n        <img src={Logo} alt=\"mainLogo\" />\n        <p>UpFlow</p>\n      </div>\n      <div className={classes.ButtonSection}>\n        {props?.Auth?.isLoggedIn ? (\n          <div className={classes.UserTooltip}>\n            <div className={classes.UserIconSection}>\n              <i className=\"user circle icon\"></i>\n            </div>\n            <span className={classes.UserTooltipActive}>\n              <div className={classes.TooltipButtons}>\n                <div className={classes.Buttons} onClick={() => props.logout()}>\n                  Logout\n                </div>\n              </div>\n            </span>\n          </div>\n        ) : (\n          <>\n            <NavLink className={classes.LoginButton} to=\"/login\" exact>\n              Login\n            </NavLink>\n            <NavLink className={classes.SignupButton} to=\"/signup\" exact>\n              Join\n            </NavLink>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { Auth: state.Auth };\n};\n\nexport default connect(mapStateToProps, { logout })(NavBar);\n","const aux = (props) => props.children;\n\nexport default aux;\n","import React from \"react\";\n\nimport classes from \"./Modal.module.css\";\n\nconst Modal = (props) => <div className={classes.Modal}>{props.children}</div>;\n\nexport default Modal;\n","import React from \"react\";\n\nimport classes from \"./Backdrop.module.css\";\n\nconst Backdrop = (props) =>\n  props.show ? (\n    <div\n      className={classes.Backdrop}\n      style={{ zIndex: props.zIndex }}\n      onClick={props.clicked}\n    ></div>\n  ) : null;\n\nexport default Backdrop;\n","import React, { useState, useCallback } from \"react\";\nimport { toast } from \"react-toastify\";\nimport Modal from \"../UI/Modal/Modal\";\nimport Backdrop from \"../UI/Backdrop/Backdrop\";\nimport { useDropzone } from \"react-dropzone\";\nimport { getS3Signeture, s3UploadImage, axios, apis } from \"../../services\";\nimport { setUserDetails } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\nimport classes from \"./CreateProjectModal.module.css\";\n\nconst CreateProjectModal = (props) => {\n  const [projectName, setProjectName] = useState(\"\");\n  const [projectDescription, setProjectDescription] = useState(\"\");\n  const [selectedImageUrl, setSelectedImageUrl] = useState(\"\");\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [loadingImage, setLoadingImage] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onDrop = useCallback(async (pendingImage) => {\n    setLoadingImage(true);\n    setSelectedImageUrl(URL.createObjectURL(pendingImage[0]));\n    setSelectedImage(pendingImage[0]);\n    setLoadingImage(false);\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: \"image/*\",\n    disabled: false,\n    onDrop,\n  });\n\n  const createProjectHandler = async () => {\n    setIsLoading(true);\n    try {\n      let projectPicture = \"\";\n\n      if (selectedImage) {\n        const s3Sign = await getS3Signeture(selectedImage.name);\n        const response = await s3UploadImage(s3Sign, selectedImage);\n        projectPicture = response.url;\n      }\n\n      const response = await axios.post(apis.CREATE_PROJECT, {\n        projectDescription,\n        projectName,\n        projectPicture,\n      });\n      console.log(\"reess\", response);\n      const oldUserDetails = props.Auth?.userdetails;\n      oldUserDetails.projectIds = [\n        ...oldUserDetails.projectIds,\n        { ...response.data.data },\n      ];\n      props.setUserDetails({ ...oldUserDetails });\n\n      toast.success(\"Wooah 😻 Your Project is Created successfully\");\n      props.shouldUpdateListHandler();\n      props.CloseBtn();\n    } catch (err) {\n      toast.error(\"Internal server error, failed to create the project\");\n      console.log(\"failed to create the project\", err);\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <div>\n      <Backdrop show zIndex={400} clicked={props.CloseBtn} />\n      <Modal>\n        <div className={classes.ModalDesign}>\n          <label className={classes.InputLabel}>\n            <p>Give a project name</p>\n          </label>\n          <input\n            className={classes.InputBoxs}\n            onChange={(event) => setProjectName(event.target.value)}\n            type=\"text\"\n          />\n          <label className={classes.InputLabel}>\n            <p>Give a project description</p>\n          </label>\n          <input\n            className={classes.InputBoxs}\n            type=\"text\"\n            onChange={(event) => setProjectDescription(event.target.value)}\n          />\n\n          {selectedImageUrl.length ? (\n            <div className={classes.SelectedProjectImageArea}>\n              <img src={selectedImageUrl} alt=\"selectedImageUrl\" />\n              <div\n                className={classes.RemoveImageButton}\n                onClick={() => setSelectedImageUrl(\"\")}\n              >\n                <p>Delete the project picture</p>\n              </div>\n            </div>\n          ) : (\n            <div className={classes.AddProjectPhotoSection}>\n              <div {...getRootProps()}>\n                <input {...getInputProps()} />\n                {loadingImage ? (\n                  <div className=\"ui active centered inline loader\"></div>\n                ) : isDragActive ? (\n                  <p>Drop the image here ...</p>\n                ) : (\n                  <p>Drag a perfect project picture here or click to add one</p>\n                )}\n              </div>\n            </div>\n          )}\n\n          <div\n            className={\n              isLoading\n                ? classes.CreateProjectDisabled\n                : classes.CreateProjectButton\n            }\n            onClick={() => (isLoading ? null : createProjectHandler())}\n          >\n            {isLoading ? (\n              <div className=\"ui active centered inline loader\"></div>\n            ) : (\n              \"CREATE\"\n            )}\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { Auth: state.Auth };\n};\n\nexport default connect(mapStateToProps, { setUserDetails })(CreateProjectModal);\n","import React, { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { NavLink } from \"react-router-dom\";\nimport CreateProjectModal from \"../CreateProjectModal/CreateProjectModal\";\nimport { apis, axios } from \"../../services\";\nimport { setUserDetails } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\nimport Logo from \"../../assets/logo.png\";\n\nimport classes from \"./LeftSideBar.module.css\";\n\nconst LeftSideBar = (props) => {\n  const [showCreateProjectModal, setShowCreateProjectModal] = useState(false);\n  const [myProjects, setMyProjects] = useState([]);\n  const [shouldUpdateList, setShouldUpdateList] = useState(false);\n  const [isJoining, setIsJoining] = useState(false);\n  const [joinCode, setJoinCode] = useState(\"\");\n\n  const closeCreateProjectModal = () => {\n    setShowCreateProjectModal(false);\n  };\n\n  const shouldUpdateListHandler = () => {\n    setShouldUpdateList(true);\n  };\n\n  const joinProjectHandler = async () => {\n    if (joinCode.length < 8) {\n      toast.error(\"Unable to join the project please re-check the joining Id\");\n      return;\n    }\n    setIsJoining(true);\n    try {\n      const res = await axios.post(apis.JOIN_PROJECT, { joinId: joinCode });\n      console.log(\"resss\", res);\n      if (res.data.status) {\n        const oldUserDetails = props.Auth?.userdetails;\n        oldUserDetails.projectIds = [\n          ...oldUserDetails.projectIds,\n          { ...res.data.data },\n        ];\n        props.setUserDetails({ ...oldUserDetails });\n        toast.success(\"Joined the project successfully\");\n      } else {\n        toast.error(\n          \"Unable to join the project please re-check the joining Id\"\n        );\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    setIsJoining(false);\n  };\n\n  useEffect(() => {\n    if (props.Auth?.userdetails?.projectIds.length) {\n      setMyProjects(props.Auth?.userdetails?.projectIds);\n    }\n  }, [props.Auth?.userdetails?.projectIds.length, shouldUpdateList]);\n\n  return (\n    <div>\n      {showCreateProjectModal ? (\n        <div className={classes.CreateProjectModal}>\n          <CreateProjectModal\n            shouldUpdateListHandler={shouldUpdateListHandler}\n            CloseBtn={closeCreateProjectModal}\n          />\n        </div>\n      ) : null}\n      <div className={classes.LeftProjectBar}>\n        <div\n          className={classes.CreateNewProjectButton}\n          onClick={() => setShowCreateProjectModal(true)}\n          key={\"-card\"}\n        >\n          <p>\n            <span className={classes.PlusIcon}>+ </span>Create Project\n          </p>\n        </div>\n        <br />\n        <div className={classes.JoinProject}>\n          <input\n            type=\"text\"\n            placeholder=\"enter project code here\"\n            onChange={(event) => setJoinCode(event.target.value)}\n          />\n          <div\n            className={classes.JoinButton}\n            onClick={() => joinProjectHandler()}\n          >\n            {isJoining ? (\n              <i className=\"ui active centered inline loader small\"></i>\n            ) : (\n              \"Join Project\"\n            )}\n          </div>\n        </div>\n        {myProjects.map((item, i) => {\n          return (\n            <NavLink\n              activeClassName={classes.ProjectCardActive}\n              to={\"/project/\" + item.projectId}\n              exact\n              key={i + \"-card\"}\n            >\n              <div className={classes.ProjectNameBox}>\n                <img\n                  src={\n                    item?.projectPicture?.length ? item.projectPicture : Logo\n                  }\n                  alt=\"\"\n                />\n                <div className={classes.ProjectNameSection}>\n                  {item.projectName}\n                </div>\n              </div>\n            </NavLink>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { Auth: state.Auth };\n};\n\nexport default connect(mapStateToProps, { setUserDetails })(LeftSideBar);\n","import React from \"react\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport Aux from \"../Aux\";\nimport LeftSideBar from \"../../components/LeftSideBar/LeftSideBar\";\nimport classes from \"./Layout.module.css\";\n\nconst Layout = (props) => {\n  return (\n    <Aux>\n      <NavBar />\n      <div className={classes.Layout}>\n        {props.isLeftBar === false ? null : (\n          <div className={classes.LeftBox}>\n            <LeftSideBar />\n          </div>\n        )}\n        <div\n          className={\n            props.isLeftBar === false ? classes.RightBoxFull : classes.RightBox\n          }\n        >\n          {props.children}\n        </div>\n      </div>\n    </Aux>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport Layout from \"../../hoc/Layout/Layout\";\nimport classes from \"./WelcomePage.module.css\";\n\nconst WelcomePage = (props) => {\n  return (\n    <Layout isLeftBar={false}>\n      <div className={classes.WelcomePage}>\n        <div className={classes.LeftBox}>\n          <p className={classes.Header}>\n            Work on big ideas, <br /> without the busywork. <br />\n            <div className={classes.Smiley}>😎🥳😻😻🤣😇😝😍😙😛</div>\n            Manage your team <br />\n            and project workflow <br />\n            with UpFlow\n          </p>\n        </div>\n        <div className={classes.RightBox}>\n          <div className={classes.context}>\n            <p>Please Login to start working 😜</p>\n          </div>\n\n          <div className={classes.area}>\n            <ul className={classes.circles}>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default WelcomePage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport WelcomePage from \"../WelcomePage/WelcomePage\";\nimport Layout from \"../../hoc/Layout/Layout\";\n\nimport classes from \"./HomePage.module.css\";\n\nconst HomePage = (props) => {\n  return props.Auth.isLoggedIn ? (\n    <Layout>\n      <body>\n        <div className={classes.wrapper}>\n          <div className={classes.box}>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n          <div className={classes.Main}>\n            👈🏻 Please Select A Project or Create One\n          </div>\n        </div>\n      </body>\n    </Layout>\n  ) : (\n    <WelcomePage />\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { Auth: state.Auth };\n};\n\nexport default connect(mapStateToProps, {})(HomePage);\n","import React, { Component } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { toast } from \"react-toastify\";\nimport classes from \"./LoginModal.module.css\";\nimport Aux from \"../../hoc/Aux\";\nimport BackDrop from \"../UI/Backdrop/Backdrop\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/actions\";\nimport Logo from \"../../assets/logo.png\";\n\nclass LoginModal extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    isLoading: false,\n  };\n\n  setEmail = (email) => {\n    let newState = { ...this.state };\n    newState.email = email;\n    this.setState(newState);\n  };\n\n  setPassword = (password) => {\n    let newState = { ...this.state };\n    newState.password = password;\n    this.setState(newState);\n  };\n\n  isLoadingOnHandler = () => {\n    let newState = { ...this.state };\n    newState.isLoading = true;\n    this.setState(newState);\n  };\n\n  isLoadingOFFHandler = () => {\n    let newState = { ...this.state };\n    newState.isLoading = false;\n    this.setState(newState);\n  };\n\n  onSubmit = async (event) => {\n    this.isLoadingOnHandler();\n    event.preventDefault();\n\n    try {\n      const user = await Auth.signIn(this.state.email, this.state.password);\n      toast.success(\"Successfully Loggedin 😁\");\n      this.props.closed();\n      this.props.login(user);\n    } catch (err) {\n      toast.error(err.message);\n      this.isLoadingOFFHandler();\n    }\n  };\n\n  render() {\n    let attachedClasses = [classes.LoginModal, classes.Close];\n\n    if (this.props.open) {\n      attachedClasses = [classes.LoginModal, classes.Open];\n    }\n\n    return (\n      <Aux>\n        <BackDrop\n          show={this.props.open}\n          zIndex=\"300\"\n          clicked={this.props.closed}\n        />\n        <div className={attachedClasses.join(\" \")}>\n          <div className={classes.LoginHeader}>\n            <img src={Logo} alt=\"Logo\" />\n            <p>\n              Welcome to the board of Devs <br />\n              😎 Please Login 😎\n            </p>\n          </div>\n          <div>\n            <form\n              className={classNames(\"ui form\", classes.Form)}\n              onSubmit={this.onSubmit}\n            >\n              <div className=\"field\">\n                <label>Email</label>\n                <input\n                  required\n                  type=\"text\"\n                  name=\"first-name\"\n                  placeholder=\"Example@example.com\"\n                  value={this.state.email}\n                  onChange={(event) => this.setEmail(event.target.value)}\n                />\n              </div>\n              <div className=\"field\">\n                <label>Password</label>\n                <input\n                  required\n                  type=\"password\"\n                  name=\"last-name\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={(event) => this.setPassword(event.target.value)}\n                />\n              </div>\n              <div className={classes.LoginButtonDiv}>\n                {this.state.isLoading ? (\n                  <button\n                    disabled\n                    className={classNames(\n                      \"fluid ui loading green button\",\n                      classes.LoginButton\n                    )}\n                    type=\"submit\"\n                  >\n                    Login\n                  </button>\n                ) : (\n                  <button\n                    className={classNames(\n                      \"fluid ui green button\",\n                      classes.LoginButton\n                    )}\n                    type=\"submit\"\n                  >\n                    Login\n                  </button>\n                )}\n              </div>\n            </form>\n          </div>\n        </div>\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { Auth: state.Auth };\n};\nexport default connect(mapStateToProps, {\n  login,\n})(LoginModal);\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport LoginModal from \"../../components/LoginModal/LoginModal\";\nimport Layout from \"../../hoc/Layout/Layout\";\nimport classes from \"./LoginPage.module.css\";\n\nconst LoginPage = (props) => {\n  const [open, setOpen] = useState(true);\n  const history = useHistory();\n\n  const closeHandler = () => {\n    setOpen(false);\n    history.goBack();\n  };\n\n  return (\n    <Layout isLeftBar={false}>\n      <div className={classes.LoginModal}>\n        <LoginModal open={open} closed={closeHandler} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default LoginPage;\n","import React, { Component } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { toast } from \"react-toastify\";\nimport classes from \"./SignupModal.module.css\";\nimport Aux from \"../../hoc/Aux\";\nimport BackDrop from \"../UI/Backdrop/Backdrop\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/actions\";\nimport Logo from \"../../assets/logo.png\";\n\nclass SignupModal extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    isLoading: false,\n  };\n\n  setEmail = (email) => {\n    let newState = { ...this.state };\n    newState.email = email;\n    this.setState(newState);\n  };\n\n  setPassword = (password) => {\n    let newState = { ...this.state };\n    newState.password = password;\n    this.setState(newState);\n  };\n\n  isLoadingOnHandler = () => {\n    let newState = { ...this.state };\n    newState.isLoading = true;\n    this.setState(newState);\n  };\n\n  isLoadingOFFHandler = () => {\n    let newState = { ...this.state };\n    newState.isLoading = false;\n    this.setState(newState);\n  };\n\n  onSubmit = async (event) => {\n    this.isLoadingOnHandler();\n    event.preventDefault();\n\n    try {\n      await Auth.signUp({\n        username: this.state.email,\n        password: this.state.password,\n        attributes: {\n          email: this.state.email,\n        },\n      });\n      toast.success(\"👻 Signup successful please check your mail-box\");\n      this.props.closed();\n      this.isLoadingOFFHandler();\n    } catch (err) {\n      toast.error(err.message);\n      this.isLoadingOFFHandler();\n    }\n  };\n\n  render() {\n    let attachedClasses = [classes.SignupModal, classes.Close];\n\n    if (this.props.open) {\n      attachedClasses = [classes.SignupModal, classes.Open];\n    }\n\n    return (\n      <Aux>\n        <BackDrop\n          show={this.props.open}\n          zIndex=\"300\"\n          clicked={this.props.closed}\n        />\n        <div className={attachedClasses.join(\" \")}>\n          <div className={classes.LoginHeader}>\n            <img src={Logo} alt=\"Logo\" />\n            <p>\n              Welcome to the board of Devs\n              <br />\n              😎 Please Signup 😎\n            </p>\n          </div>\n          <div>\n            <form\n              className={classNames(\"ui form\", classes.Form)}\n              onSubmit={this.onSubmit}\n            >\n              <div className=\"field\">\n                <label>Email</label>\n                <input\n                  required\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"Example@example.com\"\n                  value={this.state.email}\n                  onChange={(event) => this.setEmail(event.target.value)}\n                />\n              </div>\n              <div className=\"field\">\n                <label>Password</label>\n                <input\n                  required\n                  type=\"password\"\n                  name=\"last-name\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={(event) => this.setPassword(event.target.value)}\n                />\n              </div>\n              <div className={classes.SignupButtonDiv}>\n                {this.state.isLoading ? (\n                  <button\n                    disabled\n                    className={classNames(\n                      \"fluid ui loading green button\",\n                      classes.SignupButton\n                    )}\n                    type=\"submit\"\n                  >\n                    Loading..\n                  </button>\n                ) : (\n                  <button\n                    className={classNames(\n                      \"fluid ui green button\",\n                      classes.SignupButton\n                    )}\n                    type=\"submit\"\n                  >\n                    Signup\n                  </button>\n                )}\n              </div>\n            </form>\n          </div>\n        </div>\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { Auth: state.Auth };\n};\nexport default connect(mapStateToProps, {\n  login,\n})(SignupModal);\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport SignupModal from \"../../components/SignupModal/SignupModal\";\nimport Layout from \"../../hoc/Layout/Layout\";\nimport classes from \"./SignupPage.module.css\";\n\nconst SignupPage = (props) => {\n  const [open, setOpen] = useState(true);\n  const history = useHistory();\n\n  const closeHandler = () => {\n    setOpen(false);\n    history.goBack();\n  };\n\n  return (\n    <Layout isLeftBar={false}>\n      <div className={classes.SignupModal}>\n        <SignupModal open={open} closed={closeHandler} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default SignupPage;\n","import React, { useState, useEffect } from \"react\";\nimport Modal from \"../UI/Modal/Modal\";\nimport Select from \"react-select\";\nimport Backdrop from \"../UI/Backdrop/Backdrop\";\n\nimport classes from \"./CreateTaskModal.module.css\";\n\nconst CreateTaskModal = (props) => {\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  const [assigneeDetails, setAssigneeDetails] = useState({});\n  const [assignedByDetails, setAssignedByDetails] = useState({});\n  const [options, setOptions] = useState([]);\n\n  const submitHandler = () => {\n    props.createNewTaskHandler({\n      columnId: props.columnId,\n      taskTitle,\n      taskDescription,\n      assigneeDetails,\n      assignedByDetails,\n    });\n    props.CloseBtn();\n  };\n\n  const assigneeSelectHandler = (selected) => {\n    setAssigneeDetails(selected.value);\n  };\n\n  const assignedBySelectHandler = (selected) => {\n    setAssignedByDetails(selected.value);\n  };\n\n  useEffect(() => {\n    const optionsArr = props.Project.teamMemberIds.map((item) => ({\n      value: item,\n      label: item.email,\n    }));\n    setOptions([...optionsArr]);\n  }, [props.Project]);\n\n  return (\n    <div>\n      <Backdrop show zIndex={400} clicked={props.CloseBtn} />\n      <Modal>\n        <div className={classes.ModalDesign}>\n          <label>Task Title</label>\n          <input\n            type=\"text\"\n            onChange={(event) => setTaskTitle(event.target.value)}\n          />\n          <label>Task Description</label>\n          <input\n            type=\"text\"\n            onChange={(event) => setTaskDescription(event.target.value)}\n          />\n          <div className={classes.AssignSection}>\n            <div className={classes.AssignDropDown}>\n              <p>Assign To: </p>\n              <Select onChange={assigneeSelectHandler} options={options} />\n            </div>\n            <div className={classes.AssignDropDown}>\n              <p>Assigned By: </p>\n              <Select onChange={assignedBySelectHandler} options={options} />\n            </div>\n          </div>\n\n          <div\n            className={classes.CreateTaskButton}\n            onClick={() => submitHandler()}\n          >\n            CREATE TASK\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default CreateTaskModal;\n","import React from \"react\";\nimport Modal from \"../UI/Modal/Modal\";\nimport Backdrop from \"../UI/Backdrop/Backdrop\";\nimport classes from \"./ShowTaskModal.module.css\";\n\nconst ShowTaskModal = (props) => {\n  return (\n    <div className={classes.TaskModal}>\n      <Backdrop show zIndex={400} clicked={props.CloseBtn} />\n      <Modal>\n        <div className={classes.ModalDesign}>\n          <p>\n            Title: <strong>{props.Task.taskTitle}</strong>\n          </p>\n          <p>\n            Description:{\" \"}\n            <strong>\n              {props.Task.taskDescription\n                ? props.Task.taskDescription\n                : \"No Description\"}\n            </strong>\n          </p>\n          <p>\n            Assigned To:{\" \"}\n            <strong>\n              {props.Task.assigneeDetails.email\n                ? props.Task.assigneeDetails.email\n                : \"No One\"}\n            </strong>\n          </p>\n          <p>\n            Assigned By:{\" \"}\n            <strong>\n              {props.Task.assignedByDetails.email\n                ? props.Task.assignedByDetails.email\n                : \"No One\"}\n            </strong>\n          </p>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ShowTaskModal;\n","import React, { useState, useEffect } from \"react\";\nimport { apis, axios } from \"../../services\";\nimport Modal from \"../UI/Modal/Modal\";\nimport Backdrop from \"../UI/Backdrop/Backdrop\";\nimport { connect } from \"react-redux\";\nimport classes from \"./MembersModal.module.css\";\n\nconst MembersModal = (props) => {\n  const [adminIds, setAdminIds] = useState([]);\n\n  const removeUserHandler = async (userId) => {\n    try {\n      const oldUTeamIdsArr = [...props.Project.teamMemberIds];\n\n      const newTeamIdsArr = [];\n      oldUTeamIdsArr.forEach((item) => {\n        if (item.userId !== userId) newTeamIdsArr.push(item);\n      });\n\n      const updatedProject = { ...props.Project };\n      updatedProject.teamMemberIds = newTeamIdsArr;\n      props.SetProject(updatedProject);\n\n      const res = await axios.post(apis.PROJECT_REMOVE_MEMBER, {\n        projectId: props.Project.projectId,\n        removedUserId: userId,\n        newTeamMemberIds: newTeamIdsArr,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    if (props.Project?.adminIds?.length) {\n      setAdminIds(props.Project.adminIds.map((item) => item.userId));\n    }\n  }, [props.Project?.adminIds, props.Auth.isLoggedIn]);\n  return (\n    <div>\n      <Backdrop show zIndex={400} clicked={props.CloseBtn} />\n      <Modal>\n        <div className={classes.ModalDesign}>\n          {props.Project?.teamMemberIds?.map((item, i) => (\n            <div className={classes.UserCard} key={\"card\" + i}>\n              <p>{item.email}</p>{\" \"}\n              {adminIds.includes(\n                props.Auth?.cognitoUserInfo?.attributes?.sub\n              ) && !adminIds.includes(item.userId) ? (\n                <div\n                  className={classes.RemoveUserButton}\n                  onClick={() => removeUserHandler(item.userId)}\n                >\n                  <p>Remove</p>\n                </div>\n              ) : null}\n            </div>\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { Auth: state.Auth };\n};\n\nexport default connect(mapStateToProps, {})(MembersModal);\n","import React, { useState } from \"react\";\nimport Logo from \"../../assets/logo.png\";\nimport MembersModal from \"../MembersModal/MembersModal\";\nimport classes from \"./KanbanHeader.module.css\";\n\nconst KanbanHeader = (props) => {\n  const [showMembersModal, setShowMembersModal] = useState(false);\n\n  const closeMembersModalHandler = () => {\n    setShowMembersModal(false);\n  };\n\n  return (\n    <div>\n      {showMembersModal ? (\n        <div className={classes.MembersModalArea}>\n          <MembersModal\n            Project={props.Project}\n            SetProject={props.SetProject}\n            CloseBtn={closeMembersModalHandler}\n          />\n        </div>\n      ) : null}\n\n      <div className={classes.TheHeader}>\n        <img\n          className={classes.ProjecImage}\n          src={\n            props.Project?.projectPicture?.length\n              ? props.Project?.projectPicture\n              : Logo\n          }\n          alt=\"project-pic\"\n        />\n        <p className={classes.ProjectName}>{props.Project?.projectName}</p>\n        <div className={classes.ProjectIdAndUserSection}>\n          <div\n            className={classes.MembersButton}\n            onClick={() => setShowMembersModal(true)}\n          >\n            Members\n          </div>\n          <p>Joining ID: {props.Project?.joinId}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default KanbanHeader;\n","import React, { useState, useEffect } from \"react\";\nimport { axios, apis } from \"../../services\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport CreateTaskModal from \"../CreateTaskModal/CreateTaskModal\";\nimport ShowTaskModal from \"../ShowTaskModal/ShowTaskModal\";\nimport KanbanHeader from \"../KanbanHeader/KanbanHeader\";\nimport { v4 as uuid } from \"uuid\";\nimport classes from \"./KanbanTable.module.css\";\n\nconst KanbanTable = (props) => {\n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const { source, destination } = result;\n\n    let newColumnsUpdated = {};\n\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.tasks];\n      const destItems = [...destColumn.tasks];\n\n      const [removed] = sourceItems.splice(source.index, 1);\n\n      destItems.splice(destination.index, 0, removed);\n      newColumnsUpdated = {\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          tasks: sourceItems,\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          tasks: destItems,\n        },\n      };\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.tasks];\n      const [removed] = copiedItems.splice(source.index, 1);\n\n      copiedItems.splice(destination.index, 0, removed);\n      newColumnsUpdated = {\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          tasks: copiedItems,\n        },\n      };\n    }\n    setColumns({ ...newColumnsUpdated });\n    saveAllColumnState({ ...newColumnsUpdated });\n  };\n\n  const [showCreateTaskModal, setShowCreateTaskModal] = useState(false);\n  const [showTaskModal, setShowTaskModal] = useState(false);\n  const [project, setProject] = useState({});\n  const [columns, setColumns] = useState({});\n  const [newColumnName, setNewColumnName] = useState(\"\");\n  const [isColumnLoading, setColumnsLoading] = useState(false);\n\n  const createTaskModalHandler = () => {\n    setShowCreateTaskModal(false);\n  };\n\n  const showTaskModalHandler = () => {\n    setShowTaskModal(false);\n  };\n\n  const fetchColumns = async () => {\n    setColumnsLoading(true);\n    setColumns({});\n    try {\n      const result = await axios.post(apis.GET_PROJECT, {\n        projectId: props.projectId,\n      });\n\n      setProject(result.data.data);\n      if (result.data.data.kanbanDetails) {\n        setColumns(result.data.data.kanbanDetails);\n      } else {\n        setColumns([]);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    setColumnsLoading(false);\n  };\n\n  const saveAllColumnState = async (kanbanColumns) => {\n    try {\n      await axios.put(apis.UPDATE_PROJECT, {\n        kanbanDetails: { ...kanbanColumns },\n        projectId: props.projectId,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const createNewColumnHandler = () => {\n    const newColumnId = uuid();\n    const newColumnsUpdated = {\n      ...columns,\n      [newColumnId]: { columnName: newColumnName, tasks: [] },\n    };\n\n    setColumns({ ...newColumnsUpdated });\n\n    saveAllColumnState({ ...newColumnsUpdated });\n  };\n\n  const createNewTaskHandler = (event) => {\n    const {\n      columnId,\n      taskTitle,\n      taskDescription,\n      assigneeDetails,\n      assignedByDetails,\n    } = event;\n    const newColumnsUpdated = {\n      ...columns,\n    };\n\n    newColumnsUpdated[columnId][\"tasks\"].push({\n      id: uuid(),\n      taskTitle,\n      taskDescription,\n      assigneeDetails,\n      assignedByDetails,\n    });\n\n    setColumns({ ...newColumnsUpdated });\n    saveAllColumnState({ ...newColumnsUpdated });\n  };\n\n  useEffect(() => {\n    fetchColumns();\n  }, [props.Auth?.isLoggedIn, props?.projectId]);\n\n  return (\n    <div>\n      <div className={classes.KanbanHeader}>\n        <KanbanHeader Project={project} SetProject={setProject} />\n      </div>\n\n      <div className={classes.KanbanBody}>\n        <div className={classes.DroppableBody}>\n          {Object.keys(columns).length ? (\n            <DragDropContext\n              onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n            >\n              {Object.entries(columns).map(([columnId, column]) => {\n                return (\n                  <div className={classes.DroppableColumn} key={columnId}>\n                    <Droppable droppableId={columnId} key={columnId}>\n                      {(provided, snapshot) => {\n                        return (\n                          <div\n                            {...provided.droppableProps}\n                            ref={provided.innerRef}\n                            className={\n                              snapshot.isDraggingOver\n                                ? classes.DraggingOverColumn\n                                : classes.DraggingNotOverColumn\n                            }\n                          >\n                            <div className={classes.DroppableColumnName}>\n                              <p>{column.columnName}</p>\n                            </div>\n                            <div\n                              className={classes.AddTaskButton}\n                              onClick={() => setShowCreateTaskModal(columnId)}\n                            >\n                              <span>+</span> Add new task\n                            </div>\n                            {showCreateTaskModal === columnId ? (\n                              <div className={classes.CreateTaskModal}>\n                                <CreateTaskModal\n                                  columnId={columnId}\n                                  Project={project}\n                                  CloseBtn={createTaskModalHandler}\n                                  createNewTaskHandler={createNewTaskHandler}\n                                />\n                              </div>\n                            ) : null}\n\n                            <div className={classes.TasksSection}>\n                              {column.tasks.map((item, index) => {\n                                return (\n                                  <Draggable\n                                    key={item.id}\n                                    draggableId={item.id}\n                                    index={index}\n                                  >\n                                    {(provided, snapshot) => {\n                                      return (\n                                        <div\n                                          ref={provided.innerRef}\n                                          {...provided.draggableProps}\n                                          {...provided.dragHandleProps}\n                                          style={{\n                                            ...provided.draggableProps.style,\n                                          }}\n                                          className={\n                                            snapshot.isDragging\n                                              ? classes.TaskDragging\n                                              : classes.TaskNotDragging\n                                          }\n                                        >\n                                          {showTaskModal === item.id ? (\n                                            <ShowTaskModal\n                                              CloseBtn={showTaskModalHandler}\n                                              Task={item}\n                                            />\n                                          ) : null}\n                                          <p className={classes.TaskTitle}>\n                                            {item.taskTitle}\n                                          </p>\n\n                                          <p className={classes.AssignedTo}>\n                                            Assigned to:{\" \"}\n                                            <span\n                                              className={\n                                                classes.AssignedToEmail\n                                              }\n                                            >\n                                              {item.assigneeDetails.email\n                                                ? item.assigneeDetails.email\n                                                : \"No One\"}\n                                            </span>\n                                          </p>\n                                          <div\n                                            className={\n                                              classes.MoreDetailsSection\n                                            }\n                                            onClick={() =>\n                                              setShowTaskModal(item.id)\n                                            }\n                                          >\n                                            more details\n                                          </div>\n                                        </div>\n                                      );\n                                    }}\n                                  </Draggable>\n                                );\n                              })}\n                            </div>\n                            {provided.placeholder}\n                          </div>\n                        );\n                      }}\n                    </Droppable>\n                  </div>\n                );\n              })}\n            </DragDropContext>\n          ) : null}\n\n          {isColumnLoading ? (\n            <div className={classes.CreateColumnSection}>\n              <i className=\"ui active centered inline big loader\"></i>\n            </div>\n          ) : null}\n\n          <div className={classes.CreateColumnSection}>\n            <p>CREATE A NEW COLUMN</p>\n            <input\n              type=\"text\"\n              onChange={(event) => setNewColumnName(event.target.value)}\n              placeholder=\"give a column name\"\n            />\n            <div\n              className={classes.CreateColumnButton}\n              onClick={() => createNewColumnHandler()}\n            >\n              CREATE\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default KanbanTable;\n","import React, { useState } from \"react\";\nimport Layout from \"../../hoc/Layout/Layout\";\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport KanbanTable from \"../../components/KanbanTable/KanbanTable\";\nimport classes from \"./DashBoardPage.module.css\";\n\nconst DashBoardPage = (props) => {\n  const projectId = props.match.params.projectId;\n\n  return (\n    <Layout>\n      <KanbanTable projectId={projectId} />\n    </Layout>\n  );\n};\n\nexport default DashBoardPage;\n","import { Route, BrowserRouter, Switch } from \"react-router-dom\";\n\nimport HomePage from \"../pages/HomePage/HomePage\";\nimport LoginPage from \"../pages/LoginPage/LoginPage\";\nimport SignupPage from \"../pages/SignupPage/SignupPage\";\nimport DashBoardPage from \"../pages/DashBoardPage/DashBoardPage\";\n\nconst RouteHandler = (props) => {\n  return (\n    <BrowserRouter basename=\"/UpFlow-FE\">\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact />\n\n        <Route path=\"/login\" component={LoginPage} exact />\n\n        <Route path=\"/signup\" component={SignupPage} exact />\n\n        <Route path=\"/project/:projectId\" component={DashBoardPage} exact />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default RouteHandler;\n","import { useState, useEffect } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { connect } from \"react-redux\";\nimport { login, setUserDetails } from \"../redux/actions\";\nimport { apis, axios } from \"../services\";\nimport Loader from \"../components/Loaders/Loader\";\nimport RouteHandler from \"./RouteHandler\";\n\nconst AuthGuard = (props) => {\n  const [isAuthenticating, setAuthenticating] = useState(false);\n\n  const authenticate = async () => {\n    try {\n      setAuthenticating(true);\n      const cognitoUser = await Auth.currentAuthenticatedUser({\n        bypassCache: true,\n      });\n      props.login(cognitoUser);\n\n      setAuthenticating(false);\n    } catch (err) {\n      console.log(err);\n      setAuthenticating(false);\n    }\n  };\n\n  useEffect(() => {\n    authenticate();\n  }, []);\n\n  useEffect(() => {\n    async function fetchUserData() {\n      if (props?.Auth?.isLoggedIn) {\n        try {\n          const DBuser = await axios.get(\n            apis.GET_USER +\n              \"/\" +\n              props?.Auth?.cognitoUserInfo?.attributes?.email\n          );\n          console.log(\"DBuser\", DBuser);\n          console.log(DBuser.data.data[0].projectIds[0]);\n          props.setUserDetails(DBuser.data.data[0]);\n        } catch (err) {\n          console.log(\"failed to fetch user data\", err);\n        }\n      }\n    }\n    fetchUserData();\n  }, [props.Auth.isLoggedIn]);\n\n  return isAuthenticating ? <Loader /> : <RouteHandler />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    Auth: state.Auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login,\n  setUserDetails,\n})(AuthGuard);\n","const initialState = {\n  isLoggedIn: false,\n  cognitoUserInfo: null,\n};\n\nconst Auth = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        ...state,\n        isLoggedIn: true,\n        cognitoUserInfo: action.cognitoUserInfo,\n      };\n    case \"LOGOUT\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        token: null,\n        userdetails: null,\n      };\n    case \"SET_USER_DETAILS\":\n      return {\n        ...state,\n        userdetails: {\n          ...action.payload,\n        },\n      };\n    case \"SET_USER_DETAILS_PARTIAL\":\n      return {\n        ...state,\n        userdetails: {\n          ...state.userdetails,\n          ...action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default Auth;\n","import { combineReducers } from \"redux\";\nimport Auth from \"./authReducers\";\n\nconst createRootReducer = () => {\n  return combineReducers({\n    Auth,\n  });\n};\n\nexport default createRootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport createRootReducer from \"./reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst initialState = {};\nconst middleware = [thunk, logger];\n\nconst configureStore = () => {\n  return createStore(\n    createRootReducer(),\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n  );\n};\nexport default configureStore;\n","import AuthGuard from \"./partials/AuthGuard\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux\";\nimport { awsConfig } from \"./services\";\nimport Amplify from \"aws-amplify\";\n\nAmplify.configure(awsConfig.aws_amplify_config);\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AuthGuard />\n      <ToastContainer position={toast.POSITION.TOP_RIGHT} />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__3R-sG\",\"dash\":\"Loader_dash__1yikX\",\"uno\":\"Loader_uno__29r6b\",\"spin\":\"Loader_spin__2mEHF\",\"dos\":\"Loader_dos__1U00K\",\"spin2\":\"Loader_spin2__1ziYD\",\"tres\":\"Loader_tres__kXCBh\",\"spin3\":\"Loader_spin3__3cB1r\",\"cuatro\":\"Loader_cuatro__3JneA\",\"spin4\":\"Loader_spin4__1jO90\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LeftProjectBar\":\"LeftSideBar_LeftProjectBar__j4ANQ\",\"CreateNewProjectButton\":\"LeftSideBar_CreateNewProjectButton__Wj0UJ\",\"PlusIcon\":\"LeftSideBar_PlusIcon__1b4Pt\",\"CreateProjectModal\":\"LeftSideBar_CreateProjectModal__3Iifs\",\"ProjectNameBox\":\"LeftSideBar_ProjectNameBox__UGeex\",\"ProjectNameSection\":\"LeftSideBar_ProjectNameSection__GOkBV\",\"ProjectCardActive\":\"LeftSideBar_ProjectCardActive__1GJJj\",\"OrJoin\":\"LeftSideBar_OrJoin__FfI1h\",\"JoinProject\":\"LeftSideBar_JoinProject__1E4g3\",\"JoinButton\":\"LeftSideBar_JoinButton__1OOW-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginModal\":\"LoginModal_LoginModal__2Yqsw\",\"LoginHeader\":\"LoginModal_LoginHeader__2VUOe\",\"Open\":\"LoginModal_Open__1mvHY\",\"Close\":\"LoginModal_Close__3Ke-0\",\"Form\":\"LoginModal_Form__2ffDF\",\"LoginButton\":\"LoginModal_LoginButton__2Lo9k\",\"LoginButtonDiv\":\"LoginModal_LoginButtonDiv__1KNOD\",\"GoogleIcon\":\"LoginModal_GoogleIcon__35R6h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignupModal\":\"SignupModal_SignupModal__2Pouy\",\"LoginHeader\":\"SignupModal_LoginHeader__3mYdv\",\"Open\":\"SignupModal_Open__3z-XZ\",\"Close\":\"SignupModal_Close__2MjLf\",\"Form\":\"SignupModal_Form__1s3Ie\",\"SignupButton\":\"SignupModal_SignupButton__EYRQ_\",\"SignupButtonDiv\":\"SignupModal_SignupButtonDiv__1kw8w\",\"GoogleIcon\":\"SignupModal_GoogleIcon__3gd6Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WelcomePage\":\"WelcomePage_WelcomePage__1-1Yp\",\"LeftBox\":\"WelcomePage_LeftBox__27aEF\",\"RightBox\":\"WelcomePage_RightBox__2jdry\",\"Header\":\"WelcomePage_Header__4mawj\",\"Smiley\":\"WelcomePage_Smiley__SeeyX\",\"context\":\"WelcomePage_context__30gxi\",\"area\":\"WelcomePage_area__3I5pK\",\"circles\":\"WelcomePage_circles__13F_n\",\"animate\":\"WelcomePage_animate__13MUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TheHeader\":\"KanbanHeader_TheHeader__3Mvx_\",\"ProjectName\":\"KanbanHeader_ProjectName__ncf_r\",\"ProjecImage\":\"KanbanHeader_ProjecImage__SpJyG\",\"ProjectIdAndUserSection\":\"KanbanHeader_ProjectIdAndUserSection__3MoEh\",\"MembersButton\":\"KanbanHeader_MembersButton__3PP9f\",\"MembersModalArea\":\"KanbanHeader_MembersModalArea__324sf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalDesign\":\"CreateTaskModal_ModalDesign__2p7CL\",\"AssignSection\":\"CreateTaskModal_AssignSection__26cBR\",\"CreateTaskButton\":\"CreateTaskModal_CreateTaskButton__2ntbk\",\"AssignDropDown\":\"CreateTaskModal_AssignDropDown__7WW2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\",\"LeftBox\":\"Layout_LeftBox__A6CnF\",\"RightBox\":\"Layout_RightBox__2XCT6\",\"RightBoxFull\":\"Layout_RightBoxFull__2aysq\"};"],"sourceRoot":""}